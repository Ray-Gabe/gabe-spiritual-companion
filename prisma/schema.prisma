// prisma/schema.prisma
// Temporarily use DATABASE_URL for local development

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  email        String?  @unique  // Made nullable to match your data
  name         String
  totalXP      Int      @default(0) @map("total_xp")
  currentLevel String   @default("Seedling") @map("current_level")
  streakDays   Int      @default(0) @map("streak_days")
  lastActivity DateTime? @map("last_activity")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  // Relations
  dailyGames   DailyGame[]
  gameSessions GameSession[]

  @@map("users")
}

model DailyGame {
  id         String   @id @default(cuid())
  userId     String   @map("user_id")
  gameId     String   @map("game_id")
  playedDate DateTime @map("played_date") @db.Date  // Explicitly use DATE type
  xpEarned   Int      @map("xp_earned")
  score      Int?

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Unique constraint - one game per user per day
  @@unique([userId, gameId, playedDate])
  @@map("daily_games")
}

model DailyQuestion {
  id           String   @id @default(cuid())
  gameId       String   @map("game_id")
  questionDate DateTime @map("question_date") @db.Date
  questionData Json     @map("question_data")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("daily_questions")
}

model GameSession {
  id        String   @id @default(cuid())
  userId    String   @map("user_id")
  gameId    String   @map("game_id")
  score     Int
  xpEarned  Int      @map("xp_earned")
  duration  Int?     // in seconds
  startedAt DateTime @default(now()) @map("started_at")
  endedAt   DateTime @map("ended_at")

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("game_sessions")
}