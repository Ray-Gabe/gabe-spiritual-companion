// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String?  @unique
  name          String
  total_xp      Int      @default(0)
  current_level String   @default("Seedling")
  streak_days   Int      @default(0)
  last_activity DateTime?
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // Relations
  daily_games    DailyGame[]
  game_sessions  GameSession[]

  @@map("users")
}

model DailyGame {
  id          String   @id @default(cuid())
  user_id     String
  game_id     String
  played_date String   // Store as string YYYY-MM-DD
  xp_earned   Int
  score       Int      @default(0)
  completed_at DateTime @default(now())

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  // Simple unique constraint
  @@unique([user_id, game_id, played_date])
  @@map("daily_games")
}

model DailyQuestion {
  id            String   @id @default(cuid())
  game_id       String
  question_date String   // Store as string YYYY-MM-DD
  question_data Json     // Store the AI-generated question content
  created_at    DateTime @default(now())

  @@unique([game_id, question_date])
  @@map("daily_questions")
}

model GameSession {
  id         String   @id @default(cuid())
  user_id    String
  game_id    String
  score      Int
  xp_earned  Int
  duration   Int?     // seconds
  started_at DateTime @default(now())
  ended_at   DateTime?

  // Relations
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("game_sessions")
}